{"version":3,"sources":["Audios/MidnightPretenders.mp3","Audios/ORIGINALMusicVideoStayWithMeMikiMatsubaraHITACHISoundBreak.mp3","Audios/TomokoAranSlowNights1984.mp3","Images/e51c4d5c-5dba-42c4-8560-2621e01a43d1.jpg","Images/60425371_2223291284420463_3196375048923381760_n.jpg","Images/b5ebad46c78bf1123dca42ae3787278d.jpg","Icons/PrevIcon.js","Icons/NextIcon.js","Icons/PauseIcon.js","Icons/PlayIcon.js","Audios/index.js","Player.js","action/musicPlayerActions.js","action/actionTypes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SvgPrevIcon","props","id","x","y","viewBox","xmlSpace","className","d","SvgNextIcon","SvgPauseIcon","width","height","SvgPlayIcon","cx","cy","r","fill","stroke","strokeWidth","strokeMiterlimit","defaultState","audios","src","MidnightPreterder","img","MidnightPretendersIMG","title","artist","isPlaying","StayWithMe","StayWithMeIMG","SlowNights","SlowNightIMG","Player","audioReference","createRef","pausePlayClick","state","isPlay","current","pause","play","setState","dispatchPausePlay","songIndex","loadData","duration","sliderChange","console","log","currentTime","prevBtn","length","dispatchPrevBtn","nextBtn","dispatchNextBtn","changeSong","index","dispatchChangeSong","this","alt","onClick","PrevIcon","PauseIcon","PlayIcon","NextIcon","axis","xmax","onChange","styles","track","backgroundColor","active","thumb","marginTop","borderRadius","ref","onLoadedData","onTimeUpdate","onEnded","map","item","React","Component","connect","dispatch","type","pausePlay","cond","lastSong","store","createStore","action","audiosPausePlay","JSON","parse","stringify","audiosPrevBtn","i","audiosNextBtn","audiosChange","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dfb40454.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/MidnightPretenders.7943615a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ORIGINALMusicVideoStayWithMeMikiMatsubaraHITACHISoundBreak.c29aeec0.mp3\";","module.exports = __webpack_public_path__ + \"static/media/TomokoAranSlowNights1984.5fabab8e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/e51c4d5c-5dba-42c4-8560-2621e01a43d1.b74415c9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/60425371_2223291284420463_3196375048923381760_n.94cd85b3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/b5ebad46c78bf1123dca42ae3787278d.09772faf.jpg\";","import React from \"react\";\n\nfunction SvgPrevIcon(props) {\n  return (\n    <svg\n      id=\"prev-icon_svg__Layer_1\"\n      x={0}\n      y={0}\n      viewBox=\"0 0 20.9 12\"\n      xmlSpace=\"preserve\"\n      {...props}\n    >\n      <style>\n        {\n          \".prev-icon_svg__st0{fill:#fff;stroke:#000;stroke-width:.75;stroke-miterlimit:10}\"\n        }\n      </style>\n      <path\n        className=\"prev-icon_svg__st0\"\n        d=\"M1 6l9.1 5.2V.8zM11.4 6l9.1 5.2V.8z\"\n      />\n    </svg>\n  );\n}\n\nexport default SvgPrevIcon;\n","import React from \"react\";\n\nfunction SvgNextIcon(props) {\n  return (\n    <svg\n      id=\"next-icon_svg__Layer_1\"\n      x={0}\n      y={0}\n      viewBox=\"0 0 20.9 12\"\n      xmlSpace=\"preserve\"\n      {...props}\n    >\n      <style>\n        {\n          \".next-icon_svg__st0{fill:#fff;stroke:#000;stroke-width:.75;stroke-miterlimit:10}\"\n        }\n      </style>\n      <path\n        className=\"next-icon_svg__st0\"\n        d=\"M20 6L10.9.8v10.4zM9.6 6L.5.8v10.4z\"\n      />\n    </svg>\n  );\n}\n\nexport default SvgNextIcon;\n","import React from \"react\";\n\nfunction SvgPauseIcon(props) {\n  return (\n    <svg\n      id=\"pause-icon_svg__Layer_1\"\n      x={0}\n      y={0}\n      viewBox=\"0 0 14 22\"\n      xmlSpace=\"preserve\"\n      width=\"14px\"\n      height=\"20px\"\n      {...props}\n    >\n      <style>{\".pause-icon_svg__st0{fill:#fff}\"}</style>\n      <path className=\"pause-icon_svg__st0\" d=\"M.4.4h5.3v21.3H.4z\" />\n      <path d=\"M5.3.8v20.5H.8V.8h4.5M6 0H0v22h6V0z\" />\n      <path className=\"pause-icon_svg__st0\" d=\"M8.4.4h5.3v21.3H8.4z\" />\n      <path d=\"M13.3.8v20.5H8.8V.8h4.5M14 0H8v22h6V0z\" />\n    </svg>\n  );\n}\n\nexport default SvgPauseIcon;\n","import React from \"react\";\n\nfunction SvgPlayIcon(props) {\n  return (\n    <svg viewBox=\"0 0 22 22\" {...props}>\n      <circle cx={11} cy={11} r={10.6} fill=\"#fff\" />\n      <path d=\"M11 .8c5.7 0 10.3 4.6 10.3 10.3S16.7 21.3 11 21.3.8 16.7.8 11 5.3.8 11 .8m0-.8C4.9 0 0 4.9 0 11s4.9 11 11 11 11-4.9 11-11S17.1 0 11 0z\" />\n      <path\n        fill=\"#fff\"\n        stroke=\"#000\"\n        strokeWidth={0.75}\n        strokeMiterlimit={10}\n        d=\"M16.5 11L7.4 5.8v10.4z\"\n      />\n    </svg>\n  );\n}\n\nexport default SvgPlayIcon;\n","import MidnightPreterder from \"./MidnightPretenders.mp3\"\r\nimport StayWithMe from \"./ORIGINALMusicVideoStayWithMeMikiMatsubaraHITACHISoundBreak.mp3\";\r\nimport SlowNights from \"./TomokoAranSlowNights1984.mp3\"\r\nimport MidnightPretendersIMG from \"../Images/e51c4d5c-5dba-42c4-8560-2621e01a43d1.jpg\";\r\nimport StayWithMeIMG from \"../Images/60425371_2223291284420463_3196375048923381760_n.jpg\";\r\nimport SlowNightIMG from \"../Images/b5ebad46c78bf1123dca42ae3787278d.jpg\"\r\nimport * as ActionTypes from \"../action/actionTypes\"\r\nconst defaultState = {\r\n    audios : [\r\n        {\r\n            src : MidnightPreterder,\r\n            img : MidnightPretendersIMG,\r\n            title : \"Midnight Pretender\",\r\n            artist : \"Tomoko Aran\",\r\n            isPlaying : false\r\n        },\r\n        {\r\n            src : StayWithMe,\r\n            img : StayWithMeIMG,\r\n            title : \"Stay With Me\",\r\n            artist : \"Miki Matsubara\",\r\n            isPlaying : false\r\n        },\r\n        {\r\n            src : SlowNights,\r\n            img : SlowNightIMG,\r\n            title : \"Slow Nights\",\r\n            artist : 'Tomoko Aran',\r\n            isPlaying : false\r\n        }\r\n    ]\r\n}\r\n\r\n\r\nexport default function audioReducer(state = defaultState , action){\r\n    switch(action.type){\r\n        case ActionTypes.PAUSE_PLAY:\r\n            let audiosPausePlay = JSON.parse(JSON.stringify(state))\r\n            if(audiosPausePlay.audios[action.index].isPlaying){\r\n                audiosPausePlay.audios[action.index].isPlaying = false\r\n            }else{\r\n                audiosPausePlay.audios[action.index].isPlaying = true\r\n            }\r\n            return audiosPausePlay\r\n        case ActionTypes.PREV_BTN:\r\n            let audiosPrevBtn = JSON.parse(JSON.stringify(state))\r\n            console.log(action.cond , action.index)\r\n            for(let i = 0 ; i < audiosPrevBtn.audios.length ; i++){\r\n                audiosPrevBtn.audios[i].isPlaying = false\r\n            }\r\n            if(action.cond == true){\r\n                audiosPrevBtn.audios[action.index].isPlaying = true\r\n            }else{\r\n                audiosPrevBtn.audios[action.index].isPlaying = false\r\n            }\r\n            return audiosPrevBtn;\r\n        case ActionTypes.NEXT_BTN:\r\n            let audiosNextBtn = JSON.parse(JSON.stringify(state))\r\n            for(let i = 0 ; i < audiosNextBtn.audios.length ; i++){\r\n                audiosNextBtn.audios[i].isPlaying = false\r\n            }\r\n            if(action.cond == true){\r\n                audiosNextBtn.audios[action.index].isPlaying = true\r\n            }else{\r\n                audiosNextBtn.audios[action.index].isPlaying = false\r\n            }\r\n            return audiosNextBtn;\r\n        case ActionTypes.CHANGE_SONG:\r\n            console.log(action.index , action.lastSong)\r\n            let audiosChange = JSON.parse(JSON.stringify(state))\r\n            for(let i = 0 ; i < audiosChange.audios.length ; i++){\r\n                audiosChange.audios[i].isPlaying = false\r\n            }\r\n            if(action.index !== action.lastSong){\r\n                if(!action.cond){\r\n                    audiosChange.audios[action.index].isPlaying = true\r\n                }else{\r\n                    audiosChange.audios[action.index].isPlaying = true\r\n                }\r\n            }else{\r\n                if(!action.cond){\r\n                    audiosChange.audios[action.index].isPlaying = true\r\n                }else{\r\n                    audiosChange.audios[action.index].isPlaying = false\r\n                }\r\n            }\r\n            return audiosChange;\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n","import React , { createRef}from 'react';\r\nimport './App.css';\r\nimport Slider from \"react-input-slider\"\r\nimport PrevIcon from \"./Icons/PrevIcon\";\r\nimport NextIcon from \"./Icons/NextIcon\";\r\nimport PauseIcon from \"./Icons/PauseIcon\";\r\nimport PlayIcon from \"./Icons/PlayIcon\";\r\nimport {Provider, connect} from \"react-redux\"\r\nimport { pausePlay , changeSong, nextBtn, prevBtn } from \"./action/musicPlayerActions\"\r\n\r\nclass Player extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n          songIndex : 0,\r\n          currentTime : 0,\r\n          duration : 0,\r\n          isPlay : false\r\n        }\r\n    }\r\n  \r\n    audioReference = createRef()\r\n  \r\n    pausePlayClick = () => {\r\n      if(this.state.isPlay){\r\n        this.audioReference.current.pause();\r\n      }else{\r\n        this.audioReference.current.play();\r\n      }\r\n      this.setState({\r\n        isPlay : !this.state.isPlay\r\n      })\r\n      this.props.dispatchPausePlay(this.state.songIndex)\r\n    }\r\n  \r\n    loadData = () => {\r\n      this.setState({\r\n        duration : this.audioReference.current.duration\r\n      })\r\n      if(this.state.isPlay){\r\n        this.audioReference.current.play();\r\n      }\r\n    }\r\n  \r\n    sliderChange = ({x}) => {\r\n      console.log(x)\r\n      this.audioReference.current.currentTime = x;\r\n      this.setState({\r\n        currentTime : x\r\n      })\r\n      if(!this.state.isPlay){\r\n        this.setState({\r\n          isPlay : true\r\n        })\r\n        this.audioReference.current.play()\r\n      }\r\n    }\r\n  \r\n    prevBtn = () => {\r\n        if(this.state.songIndex === 0){\r\n          this.setState({\r\n            songIndex : this.props.audios.length - 1\r\n          })\r\n          this.props.dispatchPrevBtn(this.props.audios.length - 1, this.state.isPlay)\r\n        }else{\r\n          this.setState({\r\n            songIndex : this.state.songIndex - 1\r\n          })\r\n          this.props.dispatchPrevBtn(this.state.songIndex - 1 , this.state.isPlay)\r\n        }\r\n        \r\n    }\r\n  \r\n    nextBtn = () => {\r\n      if(this.state.songIndex === this.props.audios.length - 1){\r\n        this.setState({\r\n          songIndex : 0\r\n        })\r\n        this.props.dispatchNextBtn(0 , this.state.isPlay)\r\n      }else{\r\n        this.setState({\r\n          songIndex : this.state.songIndex + 1\r\n        })\r\n        this.props.dispatchNextBtn(this.state.songIndex + 1 , this.state.isPlay)\r\n      }\r\n    }\r\n\r\n    changeSong = (index) => {\r\n        if(index !== this.state.songIndex){\r\n            if(!this.state.isPlay){\r\n                this.setState({\r\n                    isPlay : true\r\n                })\r\n                this.props.dispatchChangeSong(index, true , this.state.songIndex)\r\n            }\r\n            this.setState({\r\n                songIndex : index,\r\n            })\r\n            this.audioReference.current.play()\r\n            this.props.dispatchChangeSong(index, true , this.state.songIndex)\r\n        }else{\r\n            if(!this.state.isPlay){\r\n                this.audioReference.current.play()\r\n                this.setState({\r\n                    isPlay : true\r\n                })\r\n                this.props.dispatchChangeSong(index, this.state.isPlay , this.state.songIndex)\r\n            }else{\r\n                this.audioReference.current.pause()\r\n                this.setState({\r\n                    isPlay : false\r\n                })\r\n                this.props.dispatchChangeSong(index, this.state.isPlay , this.state.songIndex)\r\n            }\r\n            \r\n        }         \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n            <img className=\"thumbnail\" src={this.props.audios[this.state.songIndex].img} alt=\"thumbnail\" />\r\n            <h2 className=\"title\" >{this.props.audios[this.state.songIndex].title}</h2>\r\n            <p className=\"singer\" >{this.props.audios[this.state.songIndex].artist}</p>\r\n            <div className=\"button-group\" >\r\n                <div className=\"prev-btn \" onClick={this.prevBtn}>\r\n                    <PrevIcon/>\r\n                </div>\r\n                <div className=\"play-pause-btn\" onClick={this.pausePlayClick} >\r\n                    {this.state.isPlay ? <PauseIcon/> : <PlayIcon/>}\r\n                </div>\r\n                <div className=\"next-btn\" onClick={this.nextBtn}>\r\n                    <NextIcon/>\r\n                </div>\r\n            </div>\r\n            <Slider\r\n              axis = \"x\"\r\n              xmax={this.state.duration}\r\n              x={this.state.currentTime}\r\n              onChange={this.sliderChange}\r\n                  styles={{\r\n                    track: {\r\n                      backgroundColor: \"#e3e3e3\",\r\n                      height: \"2px\",\r\n                    },\r\n                    active: {\r\n                      backgroundColor: \"#333\",\r\n                      height: \"2px\",\r\n                    },\r\n                    thumb: {\r\n                      marginTop: \"-5px\",\r\n                      width: \"12px\",\r\n                      height: \"12px\",\r\n                      backgroundColor: \"#333\",\r\n                      borderRadius: 100,\r\n                    },\r\n                  }}\r\n                />\r\n               <audio\r\n                  ref = {this.audioReference}\r\n                  src = {this.props.audios[this.state.songIndex].src}\r\n                  onLoadedData = {this.loadData}\r\n                  onTimeUpdate={()=> this.setState({currentTime : this.audioReference.current.currentTime})}\r\n                  onEnded={() => this.setState({isPlay : false})}\r\n                />\r\n              <div className=\"song-list\">\r\n                  {this.props.audios && this.props.audios.map((item , index) => {\r\n                      return (\r\n                        <div className={item.isPlaying ? \"song-item active\" : \"song-item\"} onClick={() => this.changeSong(index)}>\r\n                            <div className=\"song-des\">\r\n                                <p className={item.isPlaying ? \"song-name active\" : \"song-name\"}>{item.title}</p>\r\n                                <p className={item.isPlaying ? \"song-artist active\" : \"song-artist\"} >{item.artist}</p>\r\n                            </div>\r\n                            <div className={item.isPlaying ? \"current-song active\" : \"current-song\"}>\r\n                                {item.isPlaying ? <PauseIcon/> : <PlayIcon/>}\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                  })}\r\n              </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        audios : state.audios\r\n    }\r\n  }\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n    return {\r\n        dispatchPausePlay : (index) => dispatch(pausePlay(index)),\r\n        dispatchPrevBtn : (index , cond) => dispatch(prevBtn(index, cond)),\r\n        dispatchNextBtn : (index , cond) => dispatch(nextBtn(index, cond)),\r\n        dispatchChangeSong : (index , cond , lastSong) => dispatch(changeSong(index, cond , lastSong)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Player);\r\n","import * as ActionTypes from \"./actionTypes.js\"\r\n\r\nexport const changeSong = (index , cond , lastSong) => {\r\n    return {\r\n        type : ActionTypes.CHANGE_SONG,\r\n        index,\r\n        cond,\r\n        lastSong\r\n    }\r\n}\r\n\r\nexport const pausePlay = (index) => {\r\n    return {\r\n        type : ActionTypes.PAUSE_PLAY,\r\n        index\r\n    }\r\n}\r\nexport const nextBtn = (index , cond) => {\r\n    return {\r\n        type : ActionTypes.NEXT_BTN,\r\n        index,\r\n        cond\r\n    }\r\n}\r\nexport const prevBtn = (index , cond) => {\r\n    return {\r\n        type : ActionTypes.PREV_BTN,\r\n        index, \r\n        cond\r\n    }\r\n}","export const CHANGE_SONG = 'CHANGE_SONG';\r\nexport const PAUSE_PLAY = 'PAUSE_PLAY';\r\nexport const NEXT_BTN = 'NEXT_BTN';\r\nexport const PREV_BTN = 'PREV_BTN'","import React , { createRef}from 'react';\nimport './App.css';\nimport Slider from \"react-input-slider\"\nimport PrevIcon from \"./Icons/PrevIcon\";\nimport NextIcon from \"./Icons/NextIcon\";\nimport PauseIcon from \"./Icons/PauseIcon\";\nimport PlayIcon from \"./Icons/PlayIcon\";\nimport {createStore} from 'redux';\nimport reducer from \"./Audios/index\"\nimport {Provider, connect} from \"react-redux\"\nimport Player from \"./Player\"\n\nconst store = createStore(reducer)\n\nclass App extends React.Component{\n\n  \n  render(){\n    \n    return (\n      <Provider store={store}>\n          <Player/>\n      </Provider>\n    );\n  }\n      \n}\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}